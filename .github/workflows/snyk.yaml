name: OWASP ZAP Authenticated Scan - Juice Shop

on:
  push:
    branches:
      - master
  workflow_dispatch: # Allows manual trigger
permissions:
  contents: read    
  issues: write    
  security-events: write  
  actions: read  

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "Starting ZAP Scan"

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install OWASP ZAP
        run: |
          mkdir -p $HOME/zap
          cd $HOME/zap
          wget -N https://github.com/zaproxy/zaproxy/releases/download/v2.9.0/ZAP_2.9.0_Linux.tar.gz
          tar -zxvf ZAP_2.9.0_Linux.tar.gz
          rm ZAP_2.9.0_Linux.tar.gz
          echo 'export PATH_ZAP_SH=$HOME/zap/ZAP_2.9.0/zap.sh' >> ~/.bashrc
          echo 'export ZAP_PORT=8090' >> ~/.bashrc
          source ~/.bashrc

      - name: Copy ZAP Context File
        run: |
          mkdir -p $HOME/zap/wrk
          cp .zap/juice-shop-context.json $HOME/zap/wrk/juice-shop-context.json

      - name: Start ZAP Daemon
        run: |
          $HOME/zap/ZAP_2.9.0/zap.sh -daemon -host 0.0.0.0 -port 8090 \
          -config api.key=${{ secrets.ZAP_API_KEY }} \
          -config context.file=$HOME/zap/wrk/juice-shop-context.json > /dev/null &

      - name: Wait for ZAP to Start
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'

      - name: Run OWASP ZAP Full Scan
        run: |
          docker run -v $HOME/zap/wrk:/zap/wrk/:rw --network=host -t ghcr.io/zaproxy/zaproxy:stable \
          zap-full-scan.py -t ${{ secrets.TARGET_URL }} -J report_json.json -w report_md.md -r report_html.html \
          -config api.key=${{ secrets.ZAP_API_KEY }} -config context.file=/zap/wrk/juice-shop-context.json

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v3
        with:
          name: zap-reports
          path: report_html.html
